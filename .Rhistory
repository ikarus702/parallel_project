midterm2 <- as.numeric(midterm2_report$Midterm2.Current.Score[-1])
midterm2 <- (midterm2_report$Midterm2.Current.Score[-1])
hist(midterm2)
rm(list=ls())
midterm2_report <- read.csv("C:/Users/Byungjun/Desktop/About VT Stat/Teaching/STAT 4705/Exam/midterm2_report.csv")
View(midterm2_report)
midterm2_report$Midterm2..617918.
class(midterm2_report$Midterm2..617918.)
midterm2 <- midterm2_report$Midterm2..617918.
summary(midterm2)
hist(midterm2,main="Midterm2_Summmary",xlab="midterm2_score")
hist(midterm2,main="Midterm2_Summmary",xlab="midterm2_score",bin=5)
hist
?hist
hist(midterm2,main="Midterm2_Summmary",xlab="midterm2_score",breaks = =5)
hist(midterm2,main="Midterm2_Summmary",xlab="midterm2_score",breaks = 5)
hist(midterm2,main="Midterm2_Summmary",xlab="midterm2_score",breaks = 10)
summary(midterm2)
hist(midterm2,main="Midterm2_Summary",xlab="midterm2_score",breaks = 10)
abline(v=median(midterm2),col="red")
hist(midterm2,main="Midterm2_Summary",xlab="midterm2_score",breaks = 10)
abline(v=median(midterm2),col="red",lwd=2);abline(v=mean(midterm2),col="blue",lwd=2)
legend("topleft",legned=c("median","mean"),lty=c(1,1),col=c("red","blue"),lwd=c(2,2))
legend("topleft",legend=c("median","mean"),lty=c(1,1),col=c("red","blue"),lwd=c(2,2))
hist(midterm2,main="Midterm2_Summary",xlab="midterm2_score",breaks = 20)
hist(midterm2,main="Midterm2_Summary",xlab="midterm2_score",breaks = seq(0,100,by=10))
sd(midterm2)
230-3.25*15*sqrt(1+0.1)
0.16/20
qnorm(0.99)
qt(0.95,7)
qt(0.975,7)
qt(0.99,7)
qt(0.95,6)
qt(0.975,6)
qt(0.99,6)
96/39.364
96/12.401
exp(-2)
exp(-1)
rm(list=ls())
library(pbdMPI)
library(mlbench)
combine()
library(randomForest)
combine()
?combine
N <- 100
x <- split((1:N)+N*2,rep(1:10,each=10))
x
X <- matrix(rnorm(35*120,0,1),nrow=35,ncol=120)
X <- matrix(rnorm(35*120,0,1),nrow=35,ncol=120)
Omega <- diag(runif(120,0.1,3))
i.mat <- diag(120)
i.mat[1:5,1:5]
K1 <- crossprod(X,t(X))
dim(X)
K1 <- crossprod(t(X),t(X))
dim(K1)
?kronecker
mid.mat <- kronech(i.mat,Omega)
mid.mat <- kronecker(i.mat,Omega)
dim(mid.mat)
120*35
dim(i.mat)
i.mat <- diag(35)
mid.mat <- kronecker(i.mat,Omega)
vec(X)
as.vector(X)
all(X[,1]==as.vector(X)[1:120])
X[,1]
all(X[,1]==as.vector(X)[1:35])
all(X[1,]==as.vector(t(X))[1:35])
all(X[1,]==as.vector(t(X))[1:120])
vec.X <- as.vector(t(X))
Big.X <- matrix(rep(vec.X,35),ncol=120*35,byrow=TRUE)
dim(Big.X)
all(Big.X[1,]==Big.X[2,])
K2 <- Big.X%*%mid.mat%*%t(Big.X)
K1
all(K1==K2)
K1[1,]
K2[1,]
mid.mat
mid.mat[1:10,1:10]
mid.mat[121:131,121:131]
one.vec <- matrix(rep(1,35),nrow=1)
one.mat <- one.vec %*% t(one.vec)
mid.mat <- kronecker(one.mat,Omega)
K2 <- Big.X%*%mid.mat%*%t(Big.X)
one.mat
one.vec
one.vec <- matrix(rep(1,35),ncol=1)
one.mat <- one.vec %*% t(one.vec)
mid.mat <- kronecker(one.mat,Omega)
vec.X <- as.vector(t(X))
Big.X <- matrix(rep(vec.X,35),ncol=120*35,byrow=TRUE)
K2 <- Big.X%*%mid.mat%*%t(Big.X)
K2
one.mat
mid.mat[1:35,1:35]
dim(K2)
mid.mat[1:35,1:35]
mid.mat[1:10,1:10]
mid.mat[36:46,36:46]
mid.mat[121:131,121:131]
dim(mid.mat)
Big.X[1,]
K1[1:10,1:10]
K2[1:10,1:10]
X[,1]
X[,1]*X[,1]*diag(Omega)[1]
diag(Omega)
diag(Omega)[1]
X[,1]*X[,1]*(diag(Omega)[1])
sum(X[,1]*X[,1]*diag(Omega))
sum(X[1,]*X[1,]*diag(Omega))
K1[1,1]
K1 <- X%*%Omega%*%t(X)
K1[1,1]
sum(X[1,]*X[2,]*diag(Omega))
K[1,2]
K1[1,2]
K1[2,1]
dim(Big.X)
vec.X <- as.vector((X))
all(X[1,]==vec.X[1:35])
all(X[1,]==vec.X[1:120])
dim(X)
vec.X <- as.vector(t(X))
all(X[1,]==vec.X[1:120])
Big.X <- kronecker(one.vec,t(X))
dim(Big.X)
K2 <- t(Big.X)%*%mid.mat%*%(Big.X)
K2
K2[1,1]
Big.X[1:120,1]
all(Big.X[1:120,1]==Big.X[121:240,1]
)
system.time(K1 <- X%*%Omega%*%t(X))
ptm <- proc.time()
X <- matrix(rnorm(35*120,0,1),nrow=35,ncol=120)
Omega <- diag(runif(120,0.1,3))
i.mat <- diag(35)
one.vec <- matrix(rep(1,35),ncol=1)
one.mat <- one.vec %*% t(one.vec)
proc.time()-ptm
setwd("~/GitHub/parallel_project")
rm(list=ls())
load("Time_Check_Kernel_Col.RData")
ls()
name(result.summary)
names(result.summary)
plot(result.summary$mpi.time[,3]~col.size, type="b", lwd=2, main="Comp.Time for Kernel Matrix", xlab="column size", ylab="Time (sec.)")
plot(result.summary$mpi.time[,3]~result.summary$col.size, type="b", lwd=2, main="Comp.Time for Kernel Matrix", xlab="column size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$col.size,type="b",pch=2,lwd=2,col="red")
lines(result.summary$single.time[,3]~result.summary$col.size,type="b",pch=2,lwd=2,col="red")
result.summary$single.time[,3]
plot(result.summary$mpi.time[,3]~result.summary$col.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$col.size,type="b",pch=2,lwd=2,col="red")
plot(result.summary$mpi.time[,3]~result.summary$col.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$col.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
load("Time_Check_Kernel_Row.RData")
names(result.summary)
plot(result.summary$mpi.time[,3]~result.summary$nrows, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$nrows,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Kernel_Prod_Col.RData")
plot(result.summary$mpi.time[,3]~result.summary$col.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size", ylab="Time (sec.)")
names(result.summary)
plot(result.summary$mpi.time[,3]~result.summary$ncol.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$ncol.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Kernel_Prod_Row.RData")
plot(result.summary$mpi.time[,3]~result.summary$nrow.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$nrow.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
plot(result.summary$mpi.time[,3]~result.summary$nrow.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size (n)", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$nrow.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Kernel_Col.RData")
ls()
names(result.summary)
plot(result.summary$mpi.time[,3]~result.summary$col.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size (p)", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$col.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Kernel_Row.RData")
plot(result.summary$mpi.time[,3]~result.summary$nrows, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size (n)", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$nrows,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Kernel_Prod_Col.RData")
plot(result.summary$mpi.time[,3]~result.summary$ncol.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size (p)", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$ncol.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
load("Time_Check_Matmult_Block.RData")
ls()
names(result.summary)
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for 500 X 500 Matrix", xlab="block size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~0,type="b",pch=2,lwd=2,col="red",lty=2)
points(0,result.summary$single.time[,3],pch=2,lwd=2,col="red")
points(0,result.summary$single.time[3],pch=2,lwd=2,col="red")
result.summary
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2, ylim=c(0, c(max(result.summary$mpi.time[,3])+0.1)),
main="Comp.Time for 500 X 500 Matrix", xlab="block size", ylab="Time (sec.)")
points(0,result.summary$single.time[3],pch=2,lwd=2,col="red")
abline(h=result.summary$single.time[3],lty=2,lwd=2,col="red")
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2, ylim=c(0, c(max(result.summary$mpi.time[,3])+0.1)),
main="Comp.Time for 500 X 500 Matrix", xlab="block size", ylab="Time (sec.)")
abline(h=result.summary$single.time[3],lty=2,lwd=2,col="red")
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2, ylim=c(0, c(max(result.summary$mpi.time[,3])+0.1)),
main="Comp.Time for 500 X 500 Matrix", xlab="block size", ylab="Time (sec.)")
abline(h=result.summary$single.time[3],lty=2,lwd=2,col="red")
legend("topright",c("MPI","Single"),lty=c(1,2),pch=c(1,NA),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Matmult_Matsize.RData")
plot(result.summary$mpi.time[,3]~result.summary$mat.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for OLS", xlab="row (column) size (n)", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$mat.size,type="b",pch=2,lwd=2,col="red",lty=2)
plot(result.summary$mpi.time[,3]~result.summary$mat.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$single.time[,3]))),
main="Comp.Time for OLS", xlab="row (column) size (n)", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$mat.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2, ylim=c(0, c(max(result.summary$mpi.time[,3])+0.1)),
main="Comp.Time for OLS", xlab="block size", ylab="Time (sec.)")
abline(h=result.summary$single.time[3],lty=2,lwd=2,col="red")
rm(list=ls())
load("Time_Check_Matmult_Block.RData")
ls()
names(result.summary)
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2, ylim=c(0, c(max(result.summary$mpi.time[,3])+0.1)),
main="Comp.Time for OLS", xlab="block size", ylab="Time (sec.)")
abline(h=result.summary$single.time[3],lty=2,lwd=2,col="red")
legend("topright",c("MPI","Single"),lty=c(1,2),pch=c(1,NA),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Matmult_Matsize.RData")
plot(result.summary$mpi.time[,3]~result.summary$mat.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$single.time[,3]))),
main="Comp.Time for OLS", xlab="row (column) size (n)", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$mat.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,2),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
rm(list=ls())
load("Time_Check_Matmult_Node.RData")
plot(result.summary$mpi.time[1:5,3]~result.summary$node[1], type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for OLS", xlab="No. of Nodes", ylab="Time (sec.)")
plot(result.summary$mpi.time[1:5,3]~result.summary$node, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for OLS", xlab="No. of Nodes", ylab="Time (sec.)")
plot(result.summary$mpi.time[1:5,3]~result.summary$node, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[1:5,3]))),
main="Comp.Time for OLS", xlab="No. of Nodes", ylab="Time (sec.)")
lines(result.summary$single.time[1,3],type="b",pch=2,lwd=2,col="red",lty=2)
plot(result.summary$mpi.time[1:5,3]~result.summary$node, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for OLS", xlab="No. of Nodes", ylab="Time (sec.)")
lines(result.summary$mpi.time[6:10,3]~result.summary$node, type="b", lwd=2, lty=2)
abline(h=result.summary$single.time[1,3],lty=1,col="red")
abline(h=result.summary$single.time[1,3],lty=2,col="red",lwd=2)
abline(h=result.summary$single.time[2,3],lty=2,col="red",lwd=2)
rep(2,5)
legend("topleft",c("MPI; n=1000","MPI; n=5000", "Single; n=1000", "Single; n=5000"),lty=c(1,2,1,2),pch=c(1,1,NA,NA),col=c(rep("black",2),rep("red",2)),lwd=c(rep(2,4)))
legend("topright",c("MPI; n=1000","MPI; n=5000", "Single; n=1000", "Single; n=5000"),lty=c(1,2,1,2),pch=c(1,1,NA,NA),col=c(rep("black",2),rep("red",2)),lwd=c(rep(2,4)))
rm(list=ls())
plot(result.summary$mpi.time[1:5,3]~result.summary$node, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3])+5)),
main="Comp.Time for OLS", xlab="No. of Nodes", ylab="Time (sec.)")
load("Time_Check_Matmult_Node.RData")
plot(result.summary$mpi.time[1:5,3]~result.summary$node, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3])+5)),
main="Comp.Time for OLS", xlab="No. of Nodes", ylab="Time (sec.)")
lines(result.summary$mpi.time[6:10,3]~result.summary$node, type="b", lwd=2, lty=2)
abline(h=result.summary$single.time[1,3],lty=1,col="red")
abline(h=result.summary$single.time[2,3],lty=2,col="red",lwd=2)
legend("topright",c("MPI; n=1000","MPI; n=5000", "Single; n=1000", "Single; n=5000"),lty=c(1,2,1,2),pch=c(1,1,NA,NA),col=c(rep("black",2),rep("red",2)),lwd=c(rep(2,4)))
load("Time_Check_Matmult_Matsize.RData")
result.summary
rm(list=ls())
load("Time_Check_Matmult_Node.RData")
result.summary
rm(list=ls())
load("Time_Check_Kernel_Prod_Block.RData")
names(result.summary)
prod.summary <- result.summary
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
lines(result.summary$single.time[,3]~result.summary$block.size,type="b",pch=2,lwd=2,col="red",lty=2)
points(result.summary$single.time[3]~result.summary$block.size,type="b",pch=2,lwd=2,col="red",lty=2)
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
points(0,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
result.summary$single.time
result.summary$single.time[3]
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
points(0,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI","Single"),lty=c(1,NA),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
legend("topright",c("MPI","Single"),lty=c(1,NA),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
points(0,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI","Single"),lty=c(1,NA),pch=c(1,2),col=c("black","red"),lwd=c(2,2))
load("Time_Check_Kernel_Chol_Block.RData")
chol.summary <- result.summary
lines(chol.summary$mpi.time[,3]~chol.summary$block.size,type="b",lwd=2,lty=2)
chol.summary$single.time
result.summary$single.time
prod.summary$single.time
plot(result.summary$mpi.time[,3]~result.summary$block.size, type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$block.size,type="b",lwd=2,lty=2,col="blue")
points(0,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
plot(prod.summary$mpi.time[,3]~prod.summary$block.size, type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$block.size,type="b",lwd=2,lty=2,col="blue")
points(0,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(1,1,2),col=c("black","blue","red"),lwd=c(2,2,2))
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="iteration", ylab="Time (sec.)")
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="iteration", ylab="Time (sec.)")
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="l", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="iteration", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[301:400,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
chol.summary$mpi.time.mat
dim(chol.summary$mpi.time.mat)
lines(chol.summary$mpi.time.mat[5:104,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
points(1,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="l", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[5:104,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
points(1,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(NA,NA,2),col=c("black","blue","red"),lwd=c(2,2,2))
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="l", lwd=2,xlim=c(0,100), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[5:104,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
points(1,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="b", lwd=2,xlim=c(0,100), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="o", lwd=2,xlim=c(0,100), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="l", lwd=2,xlim=c(0,100), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[5:104,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(NA,NA,2),col=c("black","blue","red"),lwd=c(2,2,2))
points(1,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
load("Time_Check_Kernel_Prod_Row.RData")
rm(list=ls())
load("Time_Check_Kernel_Prod_Row.RData")
ls()
names(result.summary)
prod.summary <- result.summary
load("Time_Check_Kernel_Chol_Row.RData")
chol.summary <- result.summary
plot(result.summary$mpi.time[,3]~result.summary$row.size, type="b", lwd=2, ylim=c(0, ceiling(max(result.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size (n)", ylab="Time (sec.)")
plot(prod.summary$mpi.time[,3]~prod.summary$row.size, type="b", lwd=2, ylim=c(0, ceiling(max(prod.summary$mpi.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size (n)", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[,3]~chol.summary$nrow,type="b",lwd=2,lty=2,col="blue")
chol.summary$ncol
chol.summary$nrow
plot(prod.summary$mpi.time[,3]~prod.summary$row.size, type="b", lwd=2, ylim=c(0, ceiling(max(prod.summary$single.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size (n)", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$nrow,type="b",lwd=2,lty=2,col="blue")
lines(prod.summary$single.time[,3]~prod.summary$row.size,type="b",pch=2,lwd=2,col="red",lty=2)
legend("topleft",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(NA,NA,2),col=c("black","blue","red"),lwd=c(2,2,2))
plot(prod.summary$mpi.time[,3]~prod.summary$row.size, type="b", lwd=2, ylim=c(0, ceiling(max(prod.summary$single.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size (n)", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$nrow,type="b",lwd=2,lty=2,col="blue")
lines(prod.summary$single.time[,3]~prod.summary$row.size,type="b",pch=2,lwd=2,col="red",lty=3)
legend("topleft",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,3),pch=c(1,1,2),col=c("black","blue","red"),lwd=c(2,2,2))
rm(list=ls())
load("Time_Check_Kernel_Prod_Col.RData")
ls()
names(result.summary)
prod.summary <- result.summary
load("Time_Check_Kernel_Chol_Col.RData")
chol.summary <- result.summary
plot(prod.summary$mpi.time[,3]~chol.summary$ncol, type="b", lwd=2, ylim=c(0, ceiling(max(prod.summary$single.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size (p)", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$ncol,type="b",lwd=2,lty=2,col="blue")
lines(prod.summary$single.time[,3]~chol.summary$ncol,type="b",pch=2,lwd=2,col="red",lty=3)
legend("topleft",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,3),pch=c(1,1,2),col=c("black","blue","red"),lwd=c(2,2,2))
dist
f <- function(y) function() y
lf <- vector("list", 5)
for (i in seq_along(lf)) lf[[i]] <- f(i)
lf[[1]]()
lf
rm(list=ls())
f
add <- function(x) {
function(y) x + y
}
adders <- lapply(1:10, add)
adders[[1]](10)
adders
A <- matrix(rnorm(100,10,10),10,10)
system.time(A <- matrix(rnorm(10000,100,100),10,10))
system.time(A <- matrix(rnorm(250000,500,500),10,10))
system.time(A <- matrix(rnorm(25000000,5000,5000),10,10))
system.time(A <- matrix(rnorm(25000000,5000,5000),5000,5000))
B <- matrix(0,5000,5000)
system.time(B <- matrix(rnorm(25000000,5000,5000),5000,5000))
for(i in 1:100){
system.time({ A <- matrix(rnorm(5000^2,0,1),5000,5000) })
}
for(i in 1:100){
print(system.time({ A <- matrix(rnorm(1000^2,0,1),1000,1000) }))
}
rm(list=ls())
getwd()
load("Time_Check_Kernel_Prod_Block.RData")
result.sumamry$block <- c(4,8,16,32)
result.summary$block <- c(4,8,16,32)
names(result.summary)
prod.summary <- result.summary
load("Time_Check_Kernel_Chol_Block.RData")
chol.summary <- result.summary
plot(prod.summary$mpi.time[,3]~prod.summary$block, type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$block,type="b",lwd=2,lty=2,col="blue")
points(0,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(1,1,2),col=c("black","blue","red"),lwd=c(2,2,2))
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="l", lwd=2,xlim=c(0,100), ylim=c(0, ceiling(max(prod.summary$mpi.time.mat[301:400,3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[5:104,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
points(1,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(NA,NA,2),col=c("black","blue","red"),lwd=c(2,2,2))
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="l", lwd=2,xlim=c(0,100), ylim=c(0, ceiling(max(prod.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[5:104,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
points(1,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(NA,NA,2),col=c("black","blue","red"),lwd=c(2,2,2))
plot(prod.summary$mpi.time.mat[301:400,3]~c(1:100),type="l", lwd=2,xlim=c(0,100), ylim=c(0, ceiling(max(prod.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="Iteration", ylab="Time (sec.)")
lines(chol.summary$mpi.time.mat[301:400,3]~c(1:100),type="l",lwd=2,lty=2,col="blue")
points(1,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(NA,NA,2),col=c("black","blue","red"),lwd=c(2,2,2))
plot(prod.summary$mpi.time[,3]~prod.summary$block, type="b", lwd=2,xlim=c(0,33), ylim=c(0, ceiling(max(result.summary$single.time[3]))),
main="Comp.Time for Kernel Matrix", xlab="block size", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$block,type="b",lwd=2,lty=2,col="blue")
points(0,result.summary$single.time[3],type="b",pch=2,lwd=2,col="red",lty=2)
legend("topright",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,NA),pch=c(1,1,2),col=c("black","blue","red"),lwd=c(2,2,2))
rm(list=ls())
load("Time_Check_Kernel_Prod_Row.RData")
ls()
names(result.summary)
prod.summary <- result.summary
load("Time_Check_Kernel_Chol_Row.RData")
chol.summary <- result.summary
plot(prod.summary$mpi.time[,3]~prod.summary$nrow, type="b", lwd=2, ylim=c(0, ceiling(max(prod.summary$single.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="row size (n)", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$nrow,type="b",lwd=2,lty=2,col="blue")
lines(prod.summary$single.time[,3]~prod.summary$nrow,type="b",pch=2,lwd=2,col="red",lty=3)
legend("topleft",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,3),pch=c(1,1,2),col=c("black","blue","red"),lwd=c(2,2,2))
rm(list=ls())
load("Time_Check_Kernel_Prod_Col.RData")
ls()
names(result.summary)
prod.summary <- result.summary
load("Time_Check_Kernel_Chol_Col.RData")
chol.summary <- result.summary
plot(prod.summary$mpi.time[,3]~chol.summary$ncol, type="b", lwd=2, ylim=c(0, ceiling(max(prod.summary$single.time[,3]))),
main="Comp.Time for Kernel Matrix", xlab="column size (p)", ylab="Time (sec.)")
lines(chol.summary$mpi.time[,3]~chol.summary$ncol,type="b",lwd=2,lty=2,col="blue")
lines(prod.summary$single.time[,3]~chol.summary$ncol,type="b",pch=2,lwd=2,col="red",lty=3)
legend("topleft",c("MPI;Crossprod","MPI;Chol","Single"),lty=c(1,2,3),pch=c(1,1,2),col=c("black","blue","red"),lwd=c(2,2,2))
library(KRLS)
date(growthdata.data)
date(growthdata)
rm(list=ls())
read.csv("growthdata.dta",sep=",",header = TRUE)
library(haven)
growthdata <- read_dta("growthdata.dta")
View(growthdata)
names(growthdata)
krls()
attach(growthdata)
krls(yearsschool,growth,whichkernel = "gaussian")
result.summary <- krls(yearsschool,growth,whichkernel = "gaussian")
result.summary$Looe
result.summary$sigma
result.summary$coeffs
result.summary$lambda
result.summary$K
dim(yearsschool)
length(yearsschool)
I.mat <- diag(65)
G <- K + 0.98*I.mat
G <- result.summary$K + 0.98*I.mat
LOOE <-
inv.G <- solve(G)
inv.G <- solve(G)
inv.G
diag(G)
result.summary$lambda
diag(inv.G)
result.summary$Looe
result.summary$sigma
result.summary$vcov.c
rm(list=ls())
